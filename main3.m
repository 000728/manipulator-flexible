close all;
clear;
clc;
% 创建机器人对象
L(1) = Link([0, 0.404, 0, -pi/2, 0]);
L(2) = Link([0, 0, 0, pi/2, 0]);
L(3) = Link([0, 0.4375, 0, -pi/2, 0]);
L(4) = Link([0, 0, 0, pi/2, 0]);
L(5) = Link([0, 0.4125, 0, -pi/2, 0]);
L(6) = Link([0, 0, 0, pi/2, 0]);
L(7) = Link([0, 0.2755, 0, 0, 0]);

% 设置链接的动力学参数
L(1).m = 1.0;  % 质量
L(1).r = [0, 0, 0];  % 质心位置
L(1).I = [0.1, 0.1, 0.1];  % 惯性张量

L(2).m = 1.0;  % 质量
L(2).r = [0, 0, 0];  % 质心位置
L(2).I = [0.1, 0.1, 0.1];  % 惯性张量

L(3).m = 1.0;  % 质量
L(3).r = [0, 0, 0];  % 质心位置
L(3).I = [0.1, 0.1, 0.1];  % 惯性张量

L(4).m = 1.0;  % 质量
L(4).r = [0, 0, 0];  % 质心位置
L(4).I = [0.1, 0.1, 0.1];  % 惯性张量

L(5).m = 1.0;  % 质量
L(5).r = [0, 0, 0];  % 质心位置
L(5).I = [0.1, 0.1, 0.1];  % 惯性张量

L(6).m = 1.0;  % 质量
L(6).r = [0, 0, 0];  % 质心位置
L(6).I = [0.1, 0.1, 0.1];  % 惯性张量

L(7).m = 1.0;  % 质量
L(7).r = [0, 0, 0];  % 质心位置
L(7).I = [0.1, 0.1, 0.1];  % 惯性张量

% 创建机器人对象
robot = SerialLink(L, 'name', 'MyRobot');

% 设置机器人模型的重力
robot.gravity = [0; 0; -9.81];  % 设置重力向量

% 设置机器人关节速度限制
maxVelocity = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0];  % 最大关节速度限制，自行调整
maxAcceleration = [2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0];  % 最大关节加速度限制，自行调整

% 设置末端执行器轨迹
t = (0:0.1:2)';  % 时间向量
pos = [0.2*sin(2*pi*t), 0.2*cos(2*pi*t), 0.2*sin(4*pi*t)];  % 末端执行器的位置轨迹
orientation = repmat([0 0 1 pi/2], numel(t), 1);  % 末端执行器的姿态轨迹

% 执行轨迹控制
q0 = [0 0 0 0 0 0 0];  % 初始关节角度
qd0 = zeros(1, robot.n);  % 初始关节速度
qdd0 = zeros(1, robot.n);  % 初始关节加速度

for i = 1:numel(t)
    % 计算关节角度、速度和加速度
    [q, qd, qdd] = jtraj(q0, pos(i, :), t(i), qd0, qdd0);
    
    % 控制机器人运动
    robot.plot(q);
    
    % 更新关节状态
    q0 = q(end, :);
    qd0 = qd(end, :);
    qdd0 = qdd(end, :);
end